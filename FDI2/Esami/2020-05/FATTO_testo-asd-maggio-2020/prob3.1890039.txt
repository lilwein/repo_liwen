Prob3) 

1) Il costo di ogni inserimento è O(n^2), poichè man mano che inseriamo un elemento in ultima posizione 
lo confrotimo con quelli precendenti e se quello precedente è più grande cambio la posizione e continuo con i 
confronti , invece se quelli precedente è più piccolo oppure corrisponde a inizio arrey mi fermo con i confronti 
e l'elemto resta nel posto dove sta . il numero di confonti cresce nel caso peggiore come 
1 + 2 + ... + n = n(n+1)/ 2 = O(n^2). 

2) 
Il costo è dell'algoritmo è O(n logn) perchè a ogni inserimento viene fatto l'algortimo di up heap. che ha 
e ha costo log n , e gli elementi sono n.

3) 

pre order:  6 3 1 5 12 7 8 15

in order : 1 3 5 6 7 8 12 15

pos order : 1 5 3 8 7 15 12 6

